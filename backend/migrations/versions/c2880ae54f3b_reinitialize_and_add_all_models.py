"""Reinitialize and add all models

Revision ID: c2880ae54f3b
Revises: 
Create Date: 2025-06-16 15:36:10.393714

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'c2880ae54f3b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_messages_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_notifications_user'))

    op.drop_table('notifications')
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_comments_post'))
        batch_op.drop_index(batch_op.f('idx_comments_user'))

    with op.batch_alter_table('post_favorites', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('post_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint(batch_op.f('post_favorites_ibfk_1'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('post_favorites_ibfk_2'), type_='foreignkey')

    with op.batch_alter_table('post_likes', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('post_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.drop_constraint(batch_op.f('post_likes_ibfk_1'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('post_likes_ibfk_2'), type_='foreignkey')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('idx_posts_forum'))
        batch_op.drop_index(batch_op.f('idx_posts_user'))

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=128),
               nullable=True)
        batch_op.alter_column('nickname',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               type_=sa.String(length=80),
               existing_nullable=True)
        batch_op.alter_column('role',
               existing_type=mysql.ENUM('user', 'moderator', 'admin', collation='utf8mb4_unicode_ci'),
               type_=sa.String(length=20),
               existing_nullable=True,
               existing_server_default=sa.text("'user'"))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('role',
               existing_type=sa.String(length=20),
               type_=mysql.ENUM('user', 'moderator', 'admin', collation='utf8mb4_unicode_ci'),
               existing_nullable=True,
               existing_server_default=sa.text("'user'"))
        batch_op.alter_column('nickname',
               existing_type=sa.String(length=80),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               existing_nullable=True)
        batch_op.alter_column('password_hash',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=128),
               nullable=False)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_posts_user'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_posts_forum'), ['forum_id'], unique=False)

    with op.batch_alter_table('post_likes', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('post_likes_ibfk_2'), 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('post_likes_ibfk_1'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('post_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)

    with op.batch_alter_table('post_favorites', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('post_favorites_ibfk_2'), 'posts', ['post_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('post_favorites_ibfk_1'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
        batch_op.alter_column('post_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=mysql.INTEGER(),
               nullable=False)

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_comments_user'), ['user_id'], unique=False)
        batch_op.create_index(batch_op.f('idx_comments_post'), ['post_id'], unique=False)

    op.create_table('notifications',
    sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', mysql.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('type', mysql.ENUM('comment', 'like', 'mention', 'system'), nullable=False),
    sa.Column('content', mysql.TEXT(collation='utf8mb4_unicode_ci'), nullable=False),
    sa.Column('is_read', mysql.TINYINT(display_width=1), server_default=sa.text("'0'"), autoincrement=False, nullable=True),
    sa.Column('related_id', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('notifications_ibfk_1')),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_unicode_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('idx_notifications_user'), ['user_id', 'is_read'], unique=False)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_timestamp'))

    op.drop_table('messages')
    # ### end Alembic commands ###
